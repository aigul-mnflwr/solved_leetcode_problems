# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def leafSimilar(self, root1: TreeNode, root2: TreeNode) -> bool:
        
        #iterative solution - preorder traversal
        
        if not root1:
            return
        
        if not root2:
            return
        
        stack1, temp1 = [root1], []
        while stack1:
            current = stack1.pop()
            if current:
                if not current.right and not current.left:
                    temp1.append(current.val)
                if current.right:
                    stack1.append(current.right)
                if current.left:
                    stack1.append(current.left)


        stack2, temp2 = [root2], []
        
        while stack2:
            current = stack2.pop()
            if not current.left and not current.right:
                temp2.append(current.val)
            if current.right:
                stack2.append(current.right)
            if current.left:
                stack2.append(current.left)

        
        if temp1 == temp2:
            return True
        

